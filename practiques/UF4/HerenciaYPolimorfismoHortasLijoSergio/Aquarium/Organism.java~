/*
 * Program.java    11/4/22
 *
 * Crea la clase Organism
 *
 * Copyright Sergio Hortas Lij√≥ 2022 <1hiaw.hortaslijosergio@gmail.com>
 *
 * This is free software, licensed under the GNU General Public License v3.
 * See http://www.gnu.org/licenses/gpl.html for more information.
 */


public abstract class Organism {
    
    /** Atributes */
    private String name;
    private String family;
    private char light;
    private double maxTemp; 
    private double minTemp;
    private double maxPH;
    private double minPH;
    
    // CONSTRUCTORS
    
    
    /*
     * Constructor 
     */
    
    public Organism(String name, String family, char light, double maxTemp, double minTemp, double maxPH
                   , double minPH) {
        this.name = name;
        this.family = family;
        this.light = light;
        this.maxTemp = maxTemp;
        this.minTemp = minTemp;
        this.maxPH = maxPH;
        this.minPH = minPH;
    }
       
    /**
     * Getters y setters
     */
    
    /**
     * Gets the name
     *      
     */
    
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    /**
     * Gets the Light
     * 
     */
    
    public char getLight() {
        return this.light;
    }
    
    public void setLight(char light) {        
        this.light = light;
    }            
    
      /**
     * Gets the Consumption
     * 
     */
    
    public double getConsumption() {
        return this.consumption;
    }
    
    public void setConsumption(Double consumption) {        
        this.consumption = consumption;
    } 
    
    /*
     * 
     * OTHER METHODS
     *
     */
    
    // Get the consumption per m2
    
    public double consumptionM2() {
        return this.consumption / this.surfaceArea;
    }
    
    
    // Equals & hashCode    
    
    /*
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((code == null) ? 0 : code.hashCode());
        return result;
    }
    
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Area other = (Area) obj;
        if (code == null) {
            if (other.code != null)
                return false;
        } else if (code != other.code)
            return false;
        return true;
    }
    */
    
    public String toString() {
        return "\nname : " + this.name + "\nfamily : " + this.family + "\nlight : " + 
            this.light + "\nmaxTemp : " + this.maxTemp + "\nminTemp : " + this.minTemp +
            "\nmaxPH : " + this.maxPH + "\nminPH : " + this.minPH ;
    }
}

